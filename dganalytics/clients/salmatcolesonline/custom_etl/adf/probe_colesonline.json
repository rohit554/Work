{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "env": {
            "type": "string",
            "metadata": "Environment name",
            "defaultValue": "dev"
        },
        "tenant": {
            "type": "string",
            "metadata": "Tenant Name",
            "defaultValue": "tenant"
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Schedule will start one hour from this time."
            }
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/dg', parameters('env'), 'adf')]",
        "factoryname": "[concat('dg', parameters('env'), 'adf')]",
        "AzureKeyVault_baseUrl": "[concat('https://dg', parameters('env') ,'secrets.vault.azure.net/')]",
        "dailyDay1TriggerStart": "[dateTimeAdd(parameters('baseTime'), 'P1D', 'yyyy-MM-ddT00:30:00Z')]"
    },
    "resources": [
        {
            "name": "[concat(variables('factoryname'), '/AzureKeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[variables('AzureKeyVault_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(variables('factoryname'), '/AzureDatabricks')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "databricksinstanceurl"
                    },
                    "accessToken": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "databricksaccesstoken"
                    },
                    "existingClusterId": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "AzureKeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "databricksclusterid"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
            ]
        },
        {
            "name": "[concat(variables('factoryname'), '/', parameters('tenant') ,'_control_gpc_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Genesys extract",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "policy": {
                            "timeout": "01:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 1800,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "salmatcolesonline_gpc_daily_extract",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tenant": {
                                    "value": "@pipeline().parameters.tenant",
                                    "type": "Expression"
                                },
                                "extract_date": {
                                    "value": "@pipeline().parameters.extract_date",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Gamification_Export",
                        "type": "DatabricksSparkPython",
                        "dependsOn": [
                            {
                                "activity": "Genesys extract",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "00:30:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 1800,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "pythonFile": "dbfs:/mnt/datagamz/code/dganalytics/dganalytics/clients/salmatcolesonline/export_gamification_data/gpc_dg_metadata_colesonline_export.py",
                            "parameters": [
                                "--tenant",
                                "@pipeline().parameters.tenant",
                                "--run_id",
                                "@pipeline().RunId",
                                "--extract_date",
                                "@pipeline().parameters.extract_date",
                                "--org_id",
                                "@pipeline().parameters.tenant"
                            ]
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureDatabricks",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "concurrency": 1,
                "parameters": {
                    "tenant": {
                        "type": "string",
                        "defaultValue": "[parameters('tenant')]"
                    },
                    "extract_date": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "[parameters('tenant')]"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
            ]
        },
        {
            "name": "[concat(variables('factoryname'), '/', parameters('tenant') ,'_control_gpc')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Stopped",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "[concat(parameters('tenant'), '_control_gpc_pipeline')]",
                            "type": "PipelineReference"
                        },
                        "parameters": {
                            "tenant": "[parameters('tenant')]",
                            "extract_date": "@{formatDateTime(trigger().outputs.windowStartTime,'yyyy-MM-dd')}"
                        }
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Hour",
                        "interval": 6,
                        "startTime": "[variables('dailyDay1TriggerStart')]",
                        "timeZone": "UTC"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/', parameters('tenant'), '_control_gpc_pipeline')]"
            ]
        }
    ]
}
