{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"env": {
			"type": "string",
			"metadata": "Environment name",
			"defaultValue": "dev"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/dg', parameters('env'), 'adf')]",
		"factoryname": "[concat('dg', parameters('env'), 'adf')]",
		"AzureKeyVault_baseUrl": "[concat('https://dg', parameters('env') ,'secrets.vault.azure.net/')]"
	},
	"resources": [
		{
			"name": "[concat(variables('factoryname'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[variables('AzureKeyVault_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(variables('factoryname'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricksinstanceurl"
					},
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricksaccesstoken"
					},
					"existingClusterId": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricksclusterid"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault')]"
			]
		},
		{
			"name": "[concat(variables('factoryname'), '/inbound_evaluations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_inbound_evaluations",
						"type": "DatabricksSparkPython",
						"dependsOn": [],
						"policy": {
							"timeout": "02:30:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/mnt/datagamz/code/dganalytics/dganalytics/clients/skynz/custom_etl/inbound_evaluations.py",
							"parameters": [
								"--input_file",
								"@pipeline().parameters.input_file"
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"input_file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "skynz"
				},
				"annotations": [],
				"lastPublishTime": "2023-03-07T10:28:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(variables('factoryname'), '/inbound_evaluations_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "inbound_evaluations",
							"type": "PipelineReference"
						},
						"parameters": {
							"input_file": "@trigger().outputs.body.fileName"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/skynzib/blobs/data/raw/inbound_evaluations",
					"blobPathEndsWith": "",
					"ignoreEmptyBlobs": true,
					"scope": "[concat('/subscriptions/590f7ac0-b909-4092-adb4-2ad447a5bb19/resourceGroups/dg', parameters('env'), 'analytics/providers/Microsoft.Storage/storageAccounts/dg', parameters('env'), 'lakestorage')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"inbound_evaluations"
			]
		}
	]
}